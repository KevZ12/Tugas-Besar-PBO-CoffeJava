/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Dao.DoctorDao;
import controller.DoctorController;
import controller.MedicalCheckupController;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import model.Doctor;
import model.Patient;

/**
 *
 * @author Admin
 */
public class DoctorMcu extends javax.swing.JFrame {

    private DefaultListModel ListPatient = new DefaultListModel();
    private DefaultListModel listPatientDoctor = new DefaultListModel();
    private Doctor Identity = null;
    private int patient_id;
    private int appoimentId;

    public void printPatientWithDoctor(int id, int appoimentId) {
        
        DoctorDao doctorDao = new DoctorDao();
        List<Patient> patients = doctorDao.getAppoimPatients(appoimentId);
        for (Patient patient : patients) {
            System.out.println("Patient ID: " + patient.getPatientId());
            System.out.println("Name: " + patient.getFirstName() + " " + patient.getLastName());
            System.out.println("Address: " + patient.getAddress());
            System.out.println("Birth Date: " + patient.getBirtDate());
            System.out.println("Gender: " + patient.getGender());
            System.out.println("Blood Type: " + patient.getBloodType());
            System.out.println(appoimentId);
            System.out.println("---------------------------");
            listPatientDoctor.addElement(patient.getFirstName());
        }
        jList1.setModel(listPatientDoctor);
        
       
    }

    /**
     * Creates new form DoctorMcu
     */
    public DoctorMcu(Doctor identity, int appoimentId) {
        Identity = identity;
        this.appoimentId = appoimentId;
        initComponents();
        printPatientWithDoctor(identity.getDoctorId(), appoimentId);
//        System.out.println(identity.getEmail());
        jList1.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    String selectedItem = jList1.getSelectedValue(); // Changed to jList1.getSelectedValue()
                    ResultSet data = new DoctorController().viewDetailPatient(selectedItem);
                    try {
                        if (data.next()) {
                            patient_id = data.getInt("PatientId");
                        } else {
                            System.out.println("not found");
                        }
                    } catch (SQLException b) {
                        System.out.println(b.getMessage());
                    }

                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        noteField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        resultField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 128, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Doctor MCU");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
        );

        jLabel2.setText("Date");

        jLabel3.setText("Note");

        jLabel4.setText("Result");

        jScrollPane1.setViewportView(jList1);

        jButton1.setBackground(new java.awt.Color(155, 255, 139));
        jButton1.setText("Add / Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(155, 255, 139));
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(155, 255, 139));
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 156, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)
                        .addComponent(jLabel2)
                        .addComponent(dateField)
                        .addComponent(noteField)
                        .addComponent(resultField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)))
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(noteField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resultField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton3)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(814, 440));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //create
         if (jList1.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "please select the patient first", "eror", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
         boolean isExistMcu = new MedicalCheckupController().isExist(patient_id, appoimentId);
         if(isExistMcu){
             JOptionPane.showMessageDialog(null, "patient with this appoiment already inserted", "eror", JOptionPane.INFORMATION_MESSAGE);
             return;
         }
        new MedicalCheckupController().createMcu(dateField.getText(), noteField.getText(), resultField.getText(), Identity.getDoctorId(), patient_id, appoimentId);
        dateField.setText("");
        noteField.setText("");
        resultField.setText("");
        JOptionPane.showMessageDialog(null, "Success to input result medical checkup", "Success", JOptionPane.INFORMATION_MESSAGE);
//      if (jList1.isSelectionEmpty()) {
//            JOptionPane.showMessageDialog(null, "please select the patient first", "error", JOptionPane.INFORMATION_MESSAGE);
//            return;
//        }
//        
//        MedicalCheckupController mcuController = new MedicalCheckupController();
//        boolean isUpdate = !dateField.getText().isEmpty() || !noteField.getText().isEmpty() || !resultField.getText().isEmpty();
//        
//        if (isUpdate) {
//            mcuController.updateMcu(dateField.getText(), noteField.getText(), resultField.getText(), Identity.getDoctorId(), patient_id, appoimentId);
//            JOptionPane.showMessageDialog(null, "Success to update medical checkup", "Success", JOptionPane.INFORMATION_MESSAGE);
//        } else {
//            mcuController.createMcu(dateField.getText(), noteField.getText(), resultField.getText(), Identity.getDoctorId(), patient_id, appoimentId);
//            JOptionPane.showMessageDialog(null, "Success to input result medical checkup", "Success", JOptionPane.INFORMATION_MESSAGE);
//        }
//        
//        dateField.setText("");
//        noteField.setText("");
//        resultField.setText("");
//    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ListAppoiment t = new ListAppoiment(null, rootPaneCheckingEnabled, Identity);
        t.setLocationRelativeTo(null);
        t.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (jList1.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "please select the patient first", "error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        MedicalCheckupController mcuController = new MedicalCheckupController();
        mcuController.deleteMcu(Identity.getDoctorId(), patient_id, appoimentId);
        JOptionPane.showMessageDialog(null, "Success to delete medical checkup", "Success", JOptionPane.INFORMATION_MESSAGE);
        
        dateField.setText("");
        noteField.setText("");
        resultField.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorMcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorMcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorMcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorMcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorMcu(null,0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dateField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField noteField;
    private javax.swing.JTextField resultField;
    // End of variables declaration//GEN-END:variables
}
